version: '3.4'

services:
  traefik:
    image: traefik
    command:
      - "--api"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
      - "--accessLog"
      - "--log.level=INFO"
      - "--providers.docker.network=lib_backends"
      - "--metrics"
      - "--metrics.prometheus"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - backends
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
      - target: 8080
        published: 8888
        mode: host
    deploy:
      labels:
        traefik.http.routers.dashboard.rule: "(PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
        traefik.http.routers.dashboard.service: "api@internal"
      mode: global
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  vue:
    image: fabrizio2210/photobook-frontend-dev
    labels: 
        traefik.port: 80
        traefik.enable: "true"
        traefik.frontend.rule: "PathPrefix(`/`)"
        traefik.http.services.frontend-service.loadbalancer.server.port: 80
        traefik.http.routers.frontend.rule: "PathPrefix(`/`)"
    volumes:
      - ../../src/vue/src:/opt/web/src
    networks: 
      - backends

  nginx:
    image: nginx
    labels: 
        traefik.port: 80
        traefik.enable: "true"
        traefik.frontendstatic.rule: "PathPrefix(`/static`)"
        traefik.http.services.frontendstatic-service.loadbalancer.server.port: 80
        traefik.http.routers.frontendstatic.rule: "PathPrefix(`/static`)"
        traefik.http.routers.frontendstatic.middlewares: static-stripprefix
        traefik.http.middlewares.static-stripprefix.stripprefix.prefixes: /static
    volumes:
      - static_files:/usr/share/nginx/html/
    networks: 
      - backends

  redis:
    image: redis
    networks:
      - backends

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: develop
    networks:
      - backends

  mongo-express:
    image: mongo-express
    restart: always
    labels: 
      traefik.port: 80
      traefik.enable: "true"
      traefik.mongoexpress.rule: "Host(`mongo-express`)  && PathPrefix(`/`)"
      traefik.http.services.mongoexpress-service.loadbalancer.server.port: 8081
      traefik.http.routers.mongoexpress.rule: "Host(`mongo-express`) && PathPrefix(`/`)"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: develop
      ME_CONFIG_MONGODB_URL: mongodb://root:develop@mongo:27017/
    networks:
      - backends

  worker:
    image: fabrizio2210/photobook-worker-dev
    environment:
      NUDITY_APILAYER_KEY: ${NUDITY_APILAYER_KEY}
      REDIS_HOST: redis
      DB_URL: mongodb://root:develop@mongo:27017/
      DB_NAME: photobook
    volumes:
      - ../../src/go:/usr/src/app
      - static_files:/static_files
    networks:
      - backends

  api:
    image: fabrizio2210/photobook-api-dev
    labels:
      traefik.port: 80
      traefik.enable: "true"
      traefik.api.rule: "PathPrefix(`/api`)"
      traefik.http.services.api-service.loadbalancer.server.port: 5000
      traefik.http.routers.api.rule: "PathPrefix(`/api`)"
    environment:
      NUDITY_APILAYER_KEY: ${NUDITY_APILAYER_KEY}
      REDIS_HOST: redis
      DB_URL: mongodb://root:develop@mongo:27017/
      DB_NAME: photobook
      STATIC_FILES_PATH: /static_files
      GUEST_API_URL: https://have.been.to.it/api/guest
    volumes:
      - ../../src/go/:/usr/src/app
      - static_files:/static_files
    networks:
      - backends

  printer:
    image: fabrizio2210/photobook-printer-dev
    environment:
      DB_URL: mongodb://root:develop@mongo:27017/
      DB_NAME: photobook
      REDIS_HOST: redis
      STATIC_FILES_PATH: /static_files
    volumes:
      - ../../src/go/:/usr/src/app
      - static_files:/static_files
    networks:
      - backends

  sse:
    image: fabrizio2210/photobook-sse-dev
    labels: 
        traefik.port: 80
        traefik.enable: "true"
        traefik.sse.rule: "PathPrefix(`/api/notifications`)"
        traefik.http.services.sse-service.loadbalancer.server.port: 3000
        traefik.http.routers.sse.rule: "PathPrefix(`/api/notifications`)"
    environment:
      REDIS_HOST: redis
    volumes:
      - ../../src/go:/usr/src/app
    networks:
      - backends

volumes:
  static_files:

networks:
  backends:
    driver: overlay
