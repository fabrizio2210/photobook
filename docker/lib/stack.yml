version: '3.4'

services:
  traefik:
    image: traefik
    command:
      - "--api"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
      - "--accessLog"
      - "--log.level=INFO"
      - "--providers.docker.network=Traefik_backends"
      - "--metrics"
      - "--metrics.prometheus"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - backends
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
      - target: 8080
        published: 8888
        mode: host
    deploy:
      labels:
        traefik.http.routers.dashboard.rule: "(PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
        traefik.http.routers.dashboard.service: "api@internal"
      mode: global
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  vue:
    image: fabrizio2210/light_cicd-frontend
    labels: 
        traefik.port: 80
        traefik.enable: "true"
        traefik.frontend.rule: "PathPrefix(`/`)"
        traefik.http.services.frontend-service.loadbalancer.server.port: 80
        traefik.http.routers.frontend.rule: "PathPrefix(`/`)"
    networks: 
      - backends

  flask:
    image: fabrizio2210/light_cicd-backend
    labels: 
      traefik.port: 80
      traefik.enable: "true"
      traefik.frontend.rule: 'PathPrefix(`/api`)'
      traefik.http.services.backend-service.loadbalancer.server.port: 80
      traefik.http.routers.backend.rule: "PathPrefix(`/api`)"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks: 
      - backends

networks:
  backends:
    driver: overlay
